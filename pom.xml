<?xml version="1.0" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                    http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cds.pesc.WebServices</groupId>
	<artifactId>networkServerA</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>PESC CDS EdExchange Network Server A</name>
	<description>This network server will simulate sending a transcript file.</description>
	
	<properties>
		<!-- prevents cp1252 encoding warning on windows environments -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <finalName>networkServerA</finalName>
        
		<spring.version>3.2.8.RELEASE</spring.version>
		<mysql.connector.version>5.1.6</mysql.connector.version>
		<hibernate.version>4.3.8.Final</hibernate.version>
		<hibernate.annotations.version>3.5.6-Final</hibernate.annotations.version>
		<hibernate.annotations.commons.version>4.0.5.Final</hibernate.annotations.commons.version>
		<mariadb.version>1.1.7</mariadb.version>
		
	</properties>

	<profiles>
		<profile>
			<id>dev.profile</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<properties>
				<env>dev</env>
			</properties>
			<build>
				<filters>
					<filter>${basedir}/src/main/filters/filter.dev.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>ci.profile</id>
			<activation>
				<property>
					<name>env</name>
					<value>ci</value>
				</property>
			</activation>
			<properties>
				<env>ci</env>
			</properties>
			<build>
				<filters>
					<filter>${basedir}/src/main/filters/filter.ci.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>prod.profile</id>
			<activation>
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
			<properties>
				<env>prod</env>
			</properties>
			<build>
				<filters>
					<filter>${basedir}/src/main/filters/filter.prod.properties</filter>
				</filters>
			</build>
		</profile>
	</profiles>
	
	<build>
		<finalName>${finalName}</finalName>

		<resources>
			<resource>
				<directory>${project.build.directory}/generated-sources</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			
			<!-- This plugin reads properties from a file for use in the maven build process -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/src/main/filters/filter.${env}.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${hibernate.connection.driver_class}</driver>
							<forceMojoExecution>true</forceMojoExecution>
							<url>${liquibase.url}</url>
							<username>${liquibase.username}</username>
							<password>${liquibase.password}</password>
							<autocommit>true</autocommit>
							<sqlCommand>CREATE SCHEMA IF NOT EXISTS `pesc_networkserver` CHARACTER SET=utf8</sqlCommand>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
			            <groupId>mysql</groupId>
			            <artifactId>mysql-connector-java</artifactId>
			            <version>${mysql.connector.version}</version>
			        </dependency>
				</dependencies>
			</plugin>
			
			<plugin>
        		<groupId>org.liquibase</groupId>
        		<artifactId>liquibase-maven-plugin</artifactId>
        		<version>3.3.2</version>
        		<configuration>
        			<propertyFile>liquibase.properties</propertyFile>
        			<changeLogFile>${basedir}/src/main/resources/db.changelog.xml</changeLogFile>
        			<url>${liquibase.url}/${hibernate.catalog}</url>
        			<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
        		</configuration>
        		<executions>
        			<execution>
        				<phase>process-resources</phase>
        				<goals>
        					<goal>update</goal>
        				</goals>
        			</execution>
        		</executions>
        		<dependencies>
        			<dependency>
			            <groupId>mysql</groupId>
			            <artifactId>mysql-connector-java</artifactId>
			            <version>${mysql.connector.version}</version>
			        </dependency>
        		</dependencies>
        	</plugin>
		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		
		<!-- Hibernate -->
		<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>${hibernate.annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>${hibernate.annotations.commons.version}</version>
		</dependency>-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		
		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>


		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.7</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.7</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- All other -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
		<dependency>
			<groupId>javax.json</groupId>
			<artifactId>javax.json-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		
	</dependencies>

</project>